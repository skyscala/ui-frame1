aW1wb3J0IHsgQ29tcG9uZW50LCBPbkluaXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJzsKaW1wb3J0IHsgTWFpbkNvbXBvbmVudCB9IGZyb20gJy4uL21haW4uY29tcG9uZW50JzsKQENvbXBvbmVudCh7CiAgc2VsZWN0b3I6ICdhcHAtbWVudScsCiAgdGVtcGxhdGVVcmw6ICcuL21lbnUuY29tcG9uZW50Lmh0bWwnLAogIHN0eWxlVXJsczogWycuL21lbnUuY29tcG9uZW50LnNjc3MnXQp9KQpleHBvcnQgY2xhc3MgTWVudUNvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCB7CgogIG1vZGVsOiBhbnlbXSA9IFtdOwoKICBjb25zdHJ1Y3RvcihwdWJsaWMgYXBwOk1haW5Db21wb25lbnQpIHsgfQoKICBuZ09uSW5pdCgpOiB2b2lkIHsKCiAgICB0aGlzLm1vZGVsID0gWwogICAgICB7bGFiZWw6ICdIb21lJywgaWNvbjogJ3BpIHBpLWZ3IHBpLWhvbWUnLCByb3V0ZXJMaW5rOiBbJy8nXX0sICAgICAgCiAgICAgIAogICAgICB7CiAgICAgICAgbGFiZWw6ICdNYWludGVuYW5jZSBXaWRnZXRzJyxpY29uOiAncGkgcGktZncgcGktbGlzdCcsCiAgICAgICAgaXRlbXM6IFsKICAgICAgICAgIHsKICAgICAgICAgICAgbGFiZWw6ICdGaXhpbmcgTm90aWZpY2F0aW9uJywKICAgICAgICAgICAgaXRlbXM6IFsKICAgICAgICAgICAgICAgIHsgbGFiZWw6ICdSZWNvcmRzJywgcm91dGVyTGluazogWycvbWFpbi9maXhpbmctbm90aS1wYWdlJ10gfSwKICAgICAgICAgICAgICAgIHsgbGFiZWw6ICdFeGNlcHRpb25zJywgcm91dGVyTGluazogWycvbWFpbi9maXhpbmctbm90aS1leHAnXSB9LCAgCiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgXQogICAgICAgICAgfSwKICAgICAgICAgIHsKICAgICAgICAgICAgbGFiZWw6ICdPcHRpb25zIENBJywKICAgICAgICAgICAgaXRlbXM6IFsKICAgICAgICAgICAgICAgIHsgbGFiZWw6ICdSZWNvcmRzJywgcm91dGVyTGluazogWycvbWFpbi9vcHRpb25zLWNhLXBhZ2UnXSB9LCAKICAgICAgICAgICAgICAgIHsgbGFiZWw6ICdFeGNlcHRpb25zJywgcm91dGVyTGluazogWycvbWFpbi9vcHRpb25zLWNhLWV4cCddIH0sIAogICAgICAgICAgICAgICAgCiAgICAgICAgICAgIF0KICAgICAgICAgIH0KICAgICAgICBdCiAgICAgIH0sCiAgICAgIAogICAgXTsKICB9Cgp9Cg