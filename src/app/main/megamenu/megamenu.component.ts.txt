aW1wb3J0IHsgQ29tcG9uZW50IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7CmltcG9ydCB7IE1haW5Db21wb25lbnQgfSBmcm9tICcuLi9tYWluLmNvbXBvbmVudCc7CmltcG9ydCB7dHJpZ2dlciwgc3RhdGUsIHN0eWxlLCB0cmFuc2l0aW9uLCBhbmltYXRlfSBmcm9tICdAYW5ndWxhci9hbmltYXRpb25zJzsKaW1wb3J0IHsgQXBwQ29tcG9uZW50IH0gZnJvbSAnc3JjL2FwcC9hcHAuY29tcG9uZW50JzsKQENvbXBvbmVudCh7CiAgc2VsZWN0b3I6ICdhcHAtbWVnYW1lbnUnLAogIHRlbXBsYXRlVXJsOiAnLi9tZWdhbWVudS5jb21wb25lbnQuaHRtbCcsCiAgYW5pbWF0aW9uczogWwogICAgICB0cmlnZ2VyKCdjaGlsZHJlbicsIFsKICAgICAgICAgIHN0YXRlKCdoaWRkZW5BbmltYXRlZCcsIHN0eWxlKHsKICAgICAgICAgICAgICBoZWlnaHQ6ICcwcHgnCiAgICAgICAgICB9KSksCiAgICAgICAgICBzdGF0ZSgndmlzaWJsZUFuaW1hdGVkJywgc3R5bGUoewogICAgICAgICAgICAgIGhlaWdodDogJyonCiAgICAgICAgICB9KSksCiAgICAgICAgICB0cmFuc2l0aW9uKCd2aXNpYmxlQW5pbWF0ZWQgPT4gaGlkZGVuQW5pbWF0ZWQnLCBhbmltYXRlKCc0MDBtcyBjdWJpYy1iZXppZXIoMC44NiwgMCwgMC4wNywgMSknKSksCiAgICAgICAgICB0cmFuc2l0aW9uKCdoaWRkZW5BbmltYXRlZCA9PiB2aXNpYmxlQW5pbWF0ZWQnLCBhbmltYXRlKCc0MDBtcyBjdWJpYy1iZXppZXIoMC44NiwgMCwgMC4wNywgMSknKSkKICAgICAgXSkKICBdCn0pCmV4cG9ydCBjbGFzcyBNZWdhbWVudUNvbXBvbmVudCB7CgogIGNvbnN0cnVjdG9yKHB1YmxpYyBhcHA6IEFwcENvbXBvbmVudCwgcHVibGljIGFwcE1haW46IE1haW5Db21wb25lbnQpIHt9Cgp9Cg