<div class="layout-topbar">
    <a class="logo" href="/">
        <img src="assets/layout/images/DECTO.png" alt="california-logo"/>
    </a>
    <a id="menu-button" href="#" (click)="appMain.onMenuButtonClick($event)">
        <i class="pi pi-align-left"></i>
    </a>

    <a id="layout-megamenu-button" href="#" (click)="appMain.onMegaMenuButtonClick($event)">
        <i class="pi pi-angle-down"></i>
        <span class="mega-menu-title">Quick Links</span>
    </a>
    <a id="topbar-menu-button" href="#" (click)="appMain.onTopbarMenuButtonClick($event)" *ngIf="app.profileMode==='top' || appMain.isHorizontal()">
        <img src="assets/layout/images/user_holo_dark.png" alt="california-layout">
       
        <span>User</span>
    </a>

    <ul  id="topbar-usermenu" class="usermenu usermenu-overlay fadeInDown" [ngClass]="{'usermenu-active': appMain.topbarMenuActive}">
        <li #profile [ngClass]="{'menuitem-active':appMain.activeTopbarItem === profile}">
            <a href="#" (click)="appMain.onTopbarItemClick($event,profile)">
                <i class="pi pi-fw pi-user"></i>
                <span class="topbar-item-name">Profile</span>
            </a>
        </li>
        
        
        <li #todos [ngClass]="{'menuitem-active':appMain.activeTopbarItem === todos}">
            <a href="#" (click)="appMain.onTopbarItemClick($event,todos)">
                <i class="pi pi-fw pi-list"></i>
                <span class="topbar-item-name">ToDo List</span>
                <i class="layout-menuitem-toggler pi pi-fw pi-angle-down"></i>
            </a>
            <ul class="fadeInDown">
                <li role="menuitem">
                    <a href="#" (click)="appMain.onTopbarSubItemClick($event)">
                        <i class="pi pi-fw pi-sliders-h"></i>
                        <span>Current tasks</span>
                    </a>
                </li>
                <li role="menuitem">
                    <a href="#" (click)="appMain.onTopbarSubItemClick($event)">
                        <i class="pi pi-fw pi-plus"></i>
                        <span>Create New</span>
                    </a>
                </li>
            </ul>
        </li>
    </ul>

    <a id="right-sidebar-button" href="#" (click)="appMain.onRightPanelButtonClick($event)">
        <i class="pi pi-ellipsis-v"></i>
    </a>
</div>
